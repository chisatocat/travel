{"ast":null,"code":"var _jsxFileName = \"/Users/dickensau/development/react/tours/src/components/NavToggleButton.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavToggleButton({\n  className,\n  idName,\n  iconClass\n}) {\n  const handleToggle = () => {\n    setIsToggled(prevState => !prevState); // Toggle the state\n    console.log(`Button is now: ${!isToggled ? \"On\" : \"Off\"}`); // Log the current state\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleToggle,\n    type: \"button\",\n    className: className,\n    id: idName,\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: iconClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = NavToggleButton;\nexport default NavToggleButton;\nconst ToggleButton = () => {\n  _s();\n  // State to track whether the button is toggled on or off\n  const [isToggled, setIsToggled] = useState(false);\n\n  // Function to handle the toggle action\n  const handleToggle = () => {\n    setIsToggled(prevState => !prevState); // Toggle the state\n    console.log(`Button is now: ${!isToggled ? \"On\" : \"Off\"}`); // Log the current state\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleToggle,\n    children: isToggled ? \"Toggle Off\" : \"Toggle On\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleButton, \"BfAUiqoWRJivSt7ElaSfVLryCwQ=\");\n_c2 = ToggleButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavToggleButton\");\n$RefreshReg$(_c2, \"ToggleButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NavToggleButton","className","idName","iconClass","handleToggle","setIsToggled","prevState","console","log","isToggled","onClick","type","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToggleButton","_s","useState","_c2","$RefreshReg$"],"sources":["/Users/dickensau/development/react/tours/src/components/NavToggleButton.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction NavToggleButton({ className, idName, iconClass }) {\n  const handleToggle = () => {\n    setIsToggled((prevState) => !prevState); // Toggle the state\n    console.log(`Button is now: ${!isToggled ? \"On\" : \"Off\"}`); // Log the current state\n  };\n\n  return (\n    <button\n      onClick={handleToggle}\n      type=\"button\"\n      className={className}\n      id={idName}\n    >\n      <i className={iconClass}></i>\n    </button>\n  );\n}\n\nexport default NavToggleButton;\n\nconst ToggleButton = () => {\n  // State to track whether the button is toggled on or off\n  const [isToggled, setIsToggled] = useState(false);\n\n  // Function to handle the toggle action\n  const handleToggle = () => {\n    setIsToggled((prevState) => !prevState); // Toggle the state\n    console.log(`Button is now: ${!isToggled ? \"On\" : \"Off\"}`); // Log the current state\n  };\n\n  return (\n    <button onClick={handleToggle}>\n      {isToggled ? \"Toggle Off\" : \"Toggle On\"}\n    </button>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAC;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EACzD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBC,YAAY,CAAEC,SAAS,IAAK,CAACA,SAAS,CAAC,CAAC,CAAC;IACzCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAACC,SAAS,GAAG,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,oBACEV,OAAA;IACEW,OAAO,EAAEN,YAAa;IACtBO,IAAI,EAAC,QAAQ;IACbV,SAAS,EAAEA,SAAU;IACrBW,EAAE,EAAEV,MAAO;IAAAW,QAAA,eAEXd,OAAA;MAAGE,SAAS,EAAEE;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEb;AAACC,EAAA,GAhBQlB,eAAe;AAkBxB,eAAeA,eAAe;AAE9B,MAAMmB,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACX,SAAS,EAAEJ,YAAY,CAAC,GAAGgB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMjB,YAAY,GAAGA,CAAA,KAAM;IACzBC,YAAY,CAAEC,SAAS,IAAK,CAACA,SAAS,CAAC,CAAC,CAAC;IACzCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAACC,SAAS,GAAG,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,oBACEV,OAAA;IAAQW,OAAO,EAAEN,YAAa;IAAAS,QAAA,EAC3BJ,SAAS,GAAG,YAAY,GAAG;EAAW;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEb,CAAC;AAACG,EAAA,CAfID,YAAY;AAAAG,GAAA,GAAZH,YAAY;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}